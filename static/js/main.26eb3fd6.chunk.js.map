{"version":3,"sources":["base/Cache.js","base/WWW.js","core/custom_data/LKVaxCenters.js","base/Ents.js","base/GeoData.js","stateful/molecules/GeoMap.js","assets/images/geolocate.png","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","cacheKey","asyncFallback","hotItem","localStorage","getItem","JSON","parse","coldItem","setItem","stringify","QuotaExceededError","clear","JSON_HEADERS","headers","Accept","TSV_HEADERS","jsonNonCache","url","a","fetch","response","json","dataJson","WWW","get","text","content","lines","split","keys","map","key","replace","dataList","slice","line","values","reduce","data","i","LKVaxCenters","tsv","REGION_TYPES","Ents","entType","getEntsByType","ents","entIndex","ent","id","entTypes","Promise","all","getEntIndexByType","entIndexList","allEntIndex","iEnt","DEFAULT_LATLNG","isPointInPolygon","point","polygon","y","x","nIntersects","j","length","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","regionType","regionID","getGeoForRegion","onRegionsUpdate","getRegionTree","regionTree","regionMap","iRegionType","regionIDs","Object","isFoundRegion","iRegion","isPointInRegion","roundLatLng","latLng","Q","Math","round","parseFloat","EventComponent","props","useMapEvents","moveend","e","onMoveEnd","GeoMap","MapContainer","center","this","zoom","zoomControl","TileLayer","ZoomControl","position","className","children","Component","STYLE_DIV_TITLE","zIndex","top","left","background","borderRadius","STYLE_DIV_RENDERED_REGIONS","display","padding","STYLE_DIV_RENDERED_REGION","STYLE_REGION_TYPE","fontSize","color","STYLE_REGION_NAME","STYLE_IMAGE_GEOLOCATE","height","width","border","verticalAlign","paddingTop","cursor","renderLayer","layer","layerItem","lat","lng","tags","Circle","radius","pathOptions","Popup","center_si","center_ta","formatted_address","formatted_address_si","formatted_address_ta","police","district","HomePage","locationStr","latStr","lngStr","zoomStr","parseInt","parseLocationStr","match","params","state","customerLayers","regions","undefined","lkVaxCenters","onClickGeoLocate","getAllEntIndex","getRegionsForPoint","bind","setState","mapCenter","target","getCenter","newZoom","getZoom","newCenter","history","push","callback","console","debug","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","renderedLayers","renderedRegions","opacity","name","style","assign","toUpperCase","src","imgGeoLocate","alt","onClick","App","basename","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26eb3fd6.chunk.js","sourcesContent":["export default class Cache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItem = localStorage.getItem(cacheKey);\n    if (hotItem) {\n      return JSON.parse(hotItem);\n    }\n\n    const coldItem = await asyncFallback();\n    try {\n      localStorage.setItem(cacheKey, JSON.stringify(coldItem));\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItem;\n  }\n}\n","import Cache from \"./Cache.js\";\n\nconst JSON_HEADERS = {\n  headers: {\n    Accept: \"application/json\",\n  },\n};\n\nconst TSV_HEADERS = {\n  headers: {\n    Accept: \"text/csv\",\n  },\n};\n\nasync function jsonNonCache(url) {\n  const response = await fetch(url, JSON_HEADERS);\n  const dataJson = await response.json();\n  return dataJson;\n}\n\nexport default class WWW {\n  static async json(url) {\n    return Cache.get(`WWW.json.v3.${url}`, async function () {\n      return jsonNonCache(url);\n    });\n  }\n\n  static async tsv(url) {\n    const response = await fetch(url, TSV_HEADERS);\n    const content = await response.text();\n    const lines = content.split(\"\\n\");\n    const keys = lines[0].split(\"\\t\").map((key) => key.replace(\"\\r\", \"\"));\n    const dataList = lines.slice(1, -1).map(function (line) {\n      const values = line.split(\"\\t\");\n      return keys.reduce(function (data, key, i) {\n        data[key] = values[i];\n        return data;\n      }, {});\n    });\n    return dataList;\n  }\n}\n","import WWW from \"../../base/WWW.js\";\n\nconst REMOTE_URL =\n  \"https://raw.githubusercontent.com\" +\n  \"/nuuuwan/covid19/data\" +\n  \"/covid19.lk_vax_centers.latest.tsv\";\n\nexport default class LKVaxCenters {\n  static async get() {\n    return await WWW.tsv(REMOTE_URL);\n  }\n}\n","import WWW from \"./WWW.js\";\n\nexport const REGION_TYPES = [\"province\", \"district\", \"dsd\", \"gnd\"];\n\nexport default class Ents {\n  static async getEntsByType(entType) {\n    const url = `data/ents/${entType}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(function (entIndex, ent) {\n      entIndex[ent.id] = ent;\n      return entIndex;\n    }, {});\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = REGION_TYPES;\n    const entIndexList = await Promise.all(\n      entTypes.map(async function (entType) {\n        return await Ents.getEntIndexByType(entType);\n      })\n    );\n\n    return entTypes.reduce(function (allEntIndex, entType, iEnt) {\n      allEntIndex[entType] = entIndexList[iEnt];\n      return allEntIndex;\n    }, {});\n  }\n}\n","import WWW from \"./WWW.js\";\n\nimport { REGION_TYPES } from \"./Ents.js\";\n\nconst DEFAULT_LATLNG = [6.9157, 79.8636];\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      callback([position.coords.latitude, position.coords.longitude]);\n    });\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const [xj, yj] = polygon[j];\n\n    // eslint-disable-next-line no-mixed-operators\n    const a = yi > y !== yj > y;\n    // eslint-disable-next-line no-mixed-operators\n    const b = x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    const intersect = a && b;\n    if (intersect) {\n      nIntersects += 1;\n    }\n  }\n  return nIntersects % 2 === 1;\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getGeoForRegion(regionType, regionID) {\n    const url = `data/geo/${regionType}/${regionID}.json`;\n    return await WWW.json(url);\n  }\n\n  static async getRegionTree() {\n    const url = `data/geo/region_tree.json`;\n    return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionType, regionID) {\n    const multiPolygon = await GeoData.getGeoForRegion(regionType, regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point, onRegionsUpdate) {\n    let regionTree = await GeoData.getRegionTree();\n\n    let regionMap = {};\n\n    for (let iRegionType in REGION_TYPES) {\n      const regionType = REGION_TYPES[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(\n          point,\n          regionType,\n          regionID\n        );\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n          onRegionsUpdate(point, regionMap);\n          break;\n        }\n      }\n      if (!isFoundRegion) {\n        break;\n      }\n    }\n    onRegionsUpdate(point, regionMap);\n  }\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map((x) => Math.round(parseFloat(x) * Q) / Q);\n}\n","import { Component } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  ZoomControl,\n  useMapEvents,\n} from \"react-leaflet\";\n\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nfunction EventComponent(props) {\n  useMapEvents({\n    moveend: (e) => {\n      props.onMoveEnd(e);\n    },\n  });\n  return null;\n}\n\nexport default class GeoMap extends Component {\n  render() {\n    return (\n      <MapContainer\n        center={this.props.center}\n        zoom={this.props.zoom}\n        zoomControl={false}\n      >\n        <TileLayer url={URL_FORMAT} />\n        <EventComponent onMoveEnd={this.props.onMoveEnd} />\n        <ZoomControl zoom={this.props.zoom} position=\"bottomright\" />\n        <div className=\"div-center-marker\" />\n        {this.props.children}\n      </MapContainer>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/geolocate.f5052489.png\";","import { Component } from \"react\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nimport LKVaxCenters from \"../../core/custom_data/LKVaxCenters.js\";\nimport GeoData, { getBrowserLatLng, roundLatLng } from \"../../base/GeoData.js\";\nimport Ents, { REGION_TYPES } from \"../../base/Ents.js\";\n\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport imgGeoLocate from \"../../assets/images/geolocate.png\";\n\nconst DEFAULT_CIRLE_RADIUS = 500;\nconst DEFAULT_ZOOM = 16;\n\nconst STYLE_DIV_TITLE = {\n  zIndex: 10000,\n  position: \"absolute\",\n  top: 24,\n  left: 60,\n  background: \"white\",\n  borderRadius: 6,\n};\n\nconst STYLE_DIV_RENDERED_REGIONS = {\n  display: \"table-row\",\n  padding: 6,\n};\n\nlet STYLE_DIV_RENDERED_REGION = {\n  display: \"table-cell\",\n  padding: 6,\n};\n\nconst STYLE_REGION_TYPE = {\n  fontSize: \"40%\",\n  color: \"black\",\n};\n\nconst STYLE_REGION_NAME = {\n  fontSize: \"80%\",\n  color: \"black\",\n};\n\nconst STYLE_IMAGE_GEOLOCATE = {\n  height: 15,\n  width: 15,\n  border: \"none\",\n  background: \"white\",\n  verticalAlign: \"middle\",\n  padding: 6,\n  paddingTop: 9,\n  display: \"table-cell\",\n  cursor: \"pointer\",\n};\n\nfunction renderLayer(layer) {\n  return layer.map(function (layerItem) {\n    if (!layerItem.lat) {\n      return null;\n    }\n    const position = [parseFloat(layerItem.lat), parseFloat(layerItem.lng)];\n\n    let color = \"green\";\n    if (layerItem.tags) {\n      color = \"red\";\n    }\n    return (\n      <Circle\n        center={position}\n        radius={DEFAULT_CIRLE_RADIUS}\n        pathOptions={{ color: color }}\n      >\n        <Popup>\n          <h3>{layerItem.center}</h3>\n          <h3>{layerItem.center_si}</h3>\n          <h3>{layerItem.center_ta}</h3>\n\n          <ul>\n            <li>{layerItem.formatted_address}</li>\n            <li>{layerItem.formatted_address_si}</li>\n            <li>{layerItem.formatted_address_ta}</li>\n          </ul>\n\n          <hr />\n          <div>\n            {layerItem.police} Police Area,\n            {layerItem.district} District\n          </div>\n          <div>{layerItem.tags}</div>\n        </Popup>\n      </Circle>\n    );\n  });\n}\n\nfunction parseLocationStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(\",\");\n  const lat = parseFloat(latStr.replace(\"N\", \"\"));\n  const lng = parseFloat(lngStr.replace(\"E\", \"\"));\n  const zoom = parseInt(zoomStr.replace(\"z\", \"\"));\n  return { lat, lng, zoom };\n}\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    const locationStr = this.props.match.params.locationStr;\n    const { lat, lng, zoom } = parseLocationStr(locationStr);\n\n    this.state = {\n      customerLayers: [],\n      center: [lat, lng],\n      zoom: zoom,\n      regions: undefined,\n      entIndex: {},\n      allEntIndex: undefined,\n      lkVaxCenters: undefined,\n    };\n    this.onClickGeoLocate();\n  }\n\n  async componentDidMount() {\n    const allEntIndex = await Ents.getAllEntIndex();\n    const lkVaxCenters = await LKVaxCenters.get();\n\n    await GeoData.getRegionsForPoint(\n      this.state.center,\n      this.onRegionsUpdate.bind(this)\n    );\n\n    this.setState({\n      allEntIndex,\n      customerLayers: [lkVaxCenters],\n    });\n  }\n\n  async onRegionsUpdate(center, regions) {\n    this.setState({\n      center,\n      regions,\n    });\n  }\n\n  async onMoveEnd(e) {\n    const mapCenter = e.target.getCenter();\n    const newZoom = e.target.getZoom();\n    const newCenter = roundLatLng([mapCenter.lat, mapCenter.lng]);\n    const [lat, lng] = newCenter;\n    this.props.history.push(`/${lat}N,${lng}E,${newZoom}z`);\n\n    this.setState({\n      zoom: newZoom,\n    });\n\n    await GeoData.getRegionsForPoint(\n      newCenter,\n      this.onRegionsUpdate.bind(this)\n    );\n  }\n\n  onClickGeoLocate(e) {\n    getBrowserLatLng(\n      function ([lat, lng]) {\n        console.debug([lat, lng]);\n        this.setState({ center: [lat, lng], zoom: DEFAULT_ZOOM });\n      }.bind(this)\n    );\n  }\n\n  render() {\n    const { customerLayers, center, zoom, regions, allEntIndex } = this.state;\n    if (!allEntIndex) {\n      return \"...\";\n    }\n    let renderedLayers = customerLayers.map(renderLayer);\n\n    let renderedRegions = \"...\";\n    if (regions) {\n      const entTypes = REGION_TYPES;\n      const OPACITY_INCR = 0.8;\n      let opacity = 1.0;\n\n      renderedRegions = entTypes.map(function (entType) {\n        const regionID = regions[entType];\n        if (regionID) {\n          const name = allEntIndex[entType][regionID].name;\n          let style = Object.assign({}, STYLE_DIV_RENDERED_REGION, { opacity });\n          opacity *= OPACITY_INCR;\n          return (\n            <div key={`region-${regionID}`} style={style}>\n              <div style={STYLE_REGION_NAME}>{name}</div>\n              <div style={STYLE_REGION_TYPE}>{entType.toUpperCase()}</div>\n            </div>\n          );\n        }\n        return \"...\";\n      });\n    }\n\n    return (\n      <>\n        <div style={STYLE_DIV_TITLE}>\n          <div style={STYLE_DIV_RENDERED_REGIONS}>\n            <img\n              src={imgGeoLocate}\n              alt=\"geolocate\"\n              onClick={this.onClickGeoLocate.bind(this)}\n              style={STYLE_IMAGE_GEOLOCATE}\n            />\n            {renderedRegions}\n          </div>\n        </div>\n        <GeoMap\n          key={center}\n          center={center}\n          zoom={zoom}\n          onMoveEnd={this.onMoveEnd.bind(this)}\n        >\n          {renderedLayers}\n        </GeoMap>\n      </>\n    );\n  }\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename=\"/metaverse\">\n      <Switch>\n        <Route path=\"/:locationStr\" component={HomePage} />\n        <Route>\n          <Redirect to={`/6.9157N,79.8636E,15z`} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}