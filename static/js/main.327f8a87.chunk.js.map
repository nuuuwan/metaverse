{"version":3,"sources":["base/Cache.js","base/WWW.js","core/custom_data/LKVaxCenters.js","base/GeoData.js","base/Ents.js","stateful/molecules/GeoMap.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","cacheKey","asyncFallback","hotItem","localStorage","getItem","JSON","parse","console","debug","coldItem","setItem","stringify","QuotaExceededError","clear","JSON_HEADERS","headers","TSV_HEADERS","jsonNonCache","url","a","fetch","response","json","dataJson","WWW","get","text","content","lines","split","keys","map","key","replace","dataList","slice","line","values","reduce","data","i","LKVaxCenters","tsv","isPointInPolygon","point","polygon","y","x","nIntersects","j","length","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","regionType","regionID","getGeoForRegion","onRegionsUpdate","getRegionTree","regionTree","regionTypes","regionMap","iRegionType","regionIDs","Object","isFoundRegion","iRegion","isPointInRegion","Ents","entType","getEntsByType","ents","entIndex","ent","id","entTypes","Promise","all","getEntIndexByType","entIndexList","allEntIndex","iEnt","EventComponent","props","useMapEvents","click","locate","locationfound","location","log","moveend","e","onMoveEnd","GeoMap","MapContainer","center","this","zoom","TileLayer","children","Component","DEFAULT_CENTER","STYLE_DIV_TITLE","zIndex","position","top","left","background","padding","borderRadius","renderLayer","layer","layerItem","lat","parseFloat","lng","color","tags","Circle","radius","pathOptions","Popup","center_si","center_ta","formatted_address","formatted_address_si","formatted_address_ta","police","district","HomePage","state","customerLayers","regions","undefined","getAllEntIndex","lkVaxCenters","setState","renderedLayers","mapCenter","target","getCenter","latLng","newCenter","Math","round","bind","getRegionsForPoint","renderedRegions","name","join","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.327f8a87.chunk.js","sourcesContent":["export default class Cache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItem = localStorage.getItem(cacheKey);\n    if (hotItem) {\n      return JSON.parse(hotItem);\n    }\n\n    console.debug(`Cache: ${cacheKey}`);\n    const coldItem = await asyncFallback();\n    try {\n      localStorage.setItem(cacheKey, JSON.stringify(coldItem));\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItem;\n  }\n}\n","import Cache from './Cache.js';\n\nconst JSON_HEADERS = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n};\n\nconst TSV_HEADERS = {\n  headers: {\n    // 'Content-Type': 'text/csv',\n    'Accept': 'text/csv',\n  },\n};\n\nasync function jsonNonCache(url) {\n\n  const response = await fetch(url, JSON_HEADERS);\n  const dataJson = await response.json();\n  return dataJson;\n}\n\nexport default class WWW {\n  static async json(url) {\n    return Cache.get(\n      `WWW.json.v3.${url}`,\n      async function() {\n        return jsonNonCache(url);\n      },\n    );\n  }\n\n  static async tsv(url) {\n    const response = await fetch(url, TSV_HEADERS);\n    const content = await response.text();\n    const lines = content.split('\\n');\n    const keys = lines[0].split('\\t').map(key => key.replace('\\r', ''));\n    const dataList = lines.slice(1, -1).map(\n      function(line) {\n        const values = line.split('\\t');\n        return keys.reduce(\n          function(data, key, i) {\n            data[key] = values[i];\n            return data;\n          },\n          {},\n        )\n      }\n    );\n    return dataList;\n  }\n}\n","import WWW from '../../base/WWW.js';\n\nconst REMOTE_URL = 'https://raw.githubusercontent.com'\n  + '/nuuuwan/covid19/data'\n  + '/covid19.lk_vax_centers.latest.tsv';\n\nexport default class LKVaxCenters {\n  static async get() {\n    return await WWW.tsv(REMOTE_URL);\n  }\n}\n","import WWW from './WWW.js';\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const  [xj, yj] = polygon[j];\n\n    const intersect = ((yi > y) !== (yj > y))\n        && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) {\n      nIntersects += 1;\n    }\n\n  }\n  return ((nIntersects % 2) === 1);\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getGeoForRegion(regionType, regionID) {\n      const url = `data/geo/`\n        + `${regionType}/${regionID}.json`\n      return await WWW.json(url);\n  }\n\n  static async getRegionTree() {\n      const url = `data/geo/`\n        + `region_tree.json`\n      return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionType, regionID) {\n    const multiPolygon = await GeoData.getGeoForRegion(regionType, regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point, onRegionsUpdate) {\n    let regionTree = await GeoData.getRegionTree();\n    const regionTypes = ['province', 'district', 'dsd', 'gnd'];\n\n    let regionMap = {};\n\n    for (let iRegionType in regionTypes) {\n      const regionType = regionTypes[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(\n            point,\n            regionType,\n            regionID,\n        );\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n          onRegionsUpdate(regionMap);\n          break;\n        }\n      }\n      if (!isFoundRegion) {\n        return regionMap;\n      }\n    }\n    return regionMap;\n  }\n\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 100;\n  return latLng.map(x => Math.round(parseFloat(x) * Q) / Q);\n}\n","import WWW from './WWW.js';\n\nexport default class Ents {\n  static async getEntsByType(entType) {\n      const url = `data/ents/`\n        + `${entType}.tsv`\n      return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(\n      function(entIndex, ent) {\n        entIndex[ent.id] = ent;\n        return entIndex;\n      },\n      {},\n    );\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = [\n        'province',\n        'district',\n        'dsd',\n        'gnd',\n    ];\n    const entIndexList = await Promise.all(entTypes.map(\n      async function(entType) {\n        return await Ents.getEntIndexByType(entType)\n      }\n    ));\n\n    return entTypes.reduce(\n      function(allEntIndex, entType, iEnt) {\n        allEntIndex[entType] = entIndexList[iEnt];\n        return allEntIndex;\n      },\n      {},\n    );\n  }\n\n}\n","import {Component} from 'react';\nimport {MapContainer, TileLayer, useMapEvents} from 'react-leaflet';\n\nimport './GeoMap.css';\n\nconst DEFAULT_ZOOM = 16;\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\nfunction EventComponent(props) {\n  const map = useMapEvents({\n    click: () => {\n      map.locate()\n    },\n    locationfound: (location) => {\n      console.log('location found:', location)\n    },\n    moveend: (e) => {\n      props.onMoveEnd(e);\n    },\n  });\n  return null;\n}\n\nexport default class GeoMap extends Component {\n  render() {\n    return (\n      <MapContainer center={this.props.center} zoom={DEFAULT_ZOOM} >\n        <TileLayer url={URL_FORMAT}/>\n        {this.props.children}\n        <EventComponent onMoveEnd={this.props.onMoveEnd}/>\n      </MapContainer>\n    );\n  }\n}\n","import {Component} from 'react';\nimport {Circle, Popup} from 'react-leaflet';\n\nimport LKVaxCenters from '../../core/custom_data/LKVaxCenters.js';\nimport GeoData, {roundLatLng} from '../../base/GeoData.js';\nimport Ents from '../../base/Ents.js';\n\nimport GeoMap from '../molecules/GeoMap.js';\n\nconst DEFAULT_CENTER = [6.9271, 79.8612];\nconst DEFAULT_CIRLE_RADIUS = 500;\nconst STYLE_DIV_TITLE = {\n  zIndex: 10000,\n  position: 'absolute',\n  top: 12,\n  left: 60,\n  background: 'rgba(256, 256, 256, 0.8)',\n  padding: 6,\n  borderRadius: 6,\n}\n\nfunction renderLayer(layer) {\n  return layer.map(\n    function(layerItem) {\n      if (!layerItem.lat) {\n        return null;\n      }\n      const position = [\n          parseFloat(layerItem.lat),\n          parseFloat(layerItem.lng),\n      ];\n\n      let color = \"green\";\n      if (layerItem.tags) {\n        color = \"red\"\n      }\n      return (\n        <Circle\n          center={position}\n          radius={DEFAULT_CIRLE_RADIUS}\n          pathOptions={{color: color}}\n        >\n          <Popup>\n            <h3>{layerItem.center}</h3>\n            <h3>{layerItem.center_si}</h3>\n            <h3>{layerItem.center_ta}</h3>\n\n            <ul>\n              <li>{layerItem.formatted_address}</li>\n              <li>{layerItem.formatted_address_si}</li>\n              <li>{layerItem.formatted_address_ta}</li>\n            </ul>\n\n            <hr/>\n            <div>\n              {layerItem.police} Police Area,\n              {layerItem.district} District\n            </div>\n            <div>{layerItem.tags}</div>\n          </Popup>\n        </Circle>\n      );\n    }\n  )\n}\n\nexport default class HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerLayers: [],\n      center: DEFAULT_CENTER,\n      regions: undefined,\n      entIndex: {},\n    };\n  }\n\n  async componentDidMount() {\n    const allEntIndex = await Ents.getAllEntIndex();\n    const lkVaxCenters = await LKVaxCenters.get();\n\n    this.setState({\n      allEntIndex,\n      customerLayers: [lkVaxCenters],\n    });\n  }\n\n\n  render() {\n\n    const {customerLayers, center, regions, allEntIndex} = this.state;\n    const renderedLayers = customerLayers.map(renderLayer)\n\n    const onMoveEnd = async function(e) {\n      const mapCenter = e.target.getCenter();\n      const newCenter = roundLatLng([mapCenter.lat, mapCenter.lng]);\n      const onRegionsUpdate = function(regions) {\n        this.setState({regions: regions});\n      }.bind(this);\n      await GeoData.getRegionsForPoint(\n        newCenter,\n        onRegionsUpdate,\n      );\n      this.setState({\n          center: newCenter,\n      });\n    }.bind(this)\n\n    let renderedRegions = 'Searching...';\n    if (regions) {\n      const entTypes = ['province', 'district', 'dsd', 'gnd'];\n      renderedRegions = entTypes.map(\n        function(entType) {\n          const regionID = regions[entType];\n          if (regionID) {\n            return allEntIndex[entType][regionID].name;\n          }\n          return '';\n        }\n      ).join('/')\n    }\n\n    return (\n      <>\n        <div style={STYLE_DIV_TITLE}>\n          {renderedRegions}\n        </div>\n        <GeoMap center={center} onMoveEnd={onMoveEnd}>\n          {renderedLayers}\n        </GeoMap>\n      </>\n    );\n  }\n}\n","import './App.css';\n\nimport HomePage from './stateful/pages/HomePage.js';\n\nfunction App() {\n  return (\n    <HomePage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}