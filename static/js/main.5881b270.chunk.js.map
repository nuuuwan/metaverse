{"version":3,"sources":["base/Cache.js","base/WWW.js","base/Ents.js","base/GeoData.js","stateful/molecules/AbstractLayer.js","stateful/molecules/custom_layers/LKVaxCentersLayer.js","stateful/molecules/RegionGeo.js","stateful/molecules/custom_layers/CustomLayers.js","stateful/molecules/custom_layers/AdminRegionLayer.js","stateful/molecules/LayerMenuView.js","stateful/molecules/GeoMap.js","assets/images/geolocate.png","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","cacheKey","asyncFallback","hotItem","localStorage","getItem","JSON","parse","coldItem","setItem","stringify","QuotaExceededError","clear","JSON_HEADERS","headers","Accept","TSV_HEADERS","jsonNonCache","url","a","fetch","response","json","dataJson","WWW","pathFragmentList","join","get","text","content","lines","split","keys","map","key","replace","dataList","slice","line","values","reduce","data","i","ENT","COUNTRY","PROVINCE","DISTRICT","DSD","GND","REGION_TYPES","Object","ENT_TO_NAME","PARENT_TO_CHILD","undefined","Ents","entType","tsv","getEntsByType","ents","entIndex","ent","id","entTypes","Promise","all","getEntIndexByType","entIndexList","allEntIndex","iEnt","entID","parentID","getParentToChildMap","parentToChildMap","DEFAULT_LATLNG","isPointInPolygon","point","polygon","y","x","nIntersects","j","length","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","regionType","regionID","getGeoForRegion","getRegionTree","regionTree","regionMap","iRegionType","regionIDs","isFoundRegion","iRegion","isPointInRegion","roundLatLng","latLng","Q","Math","round","parseFloat","AbstractLayer","props","state","this","isComponentMounted","getDataListAndUpdateState","getDataList","setState","renderDataList","Component","LKVaxCentersLayer","pathJoin","iData","lat","position","lng","color","tags","renderedDoseInfo","dose1","push","dose2","Circle","center","radius","pathOptions","eventHandlers","mouseover","e","target","openPopup","Popup","formatted_address","police","district","style","fontSize","fuzzy_key","getLabel","toLowerCase","includes","STYLE_GEOJSON","fillColor","fillOpacity","weight","RegionGeo","geoData","getEnt","onClick","geoJsonData","type","coordinates","buttonShow","subRegionType","subRegionTypeName","className","GeoJSON","name","parseInt","population","toLocaleString","area","centroid_altitude","CUSTOM_LAYERS","rootRegionID","rootRegionType","childRegionType","getChildIDs","childIDs","childID","bind","AdminRegionLayer","POPULAR_CUSTOM_LAYERS","LayerMenuView","matchingLayerClasses","searchText","value","filter","LayerClass","isMatch","onSelectLayer","selectedLayerClasses","renderLayer","label","title","placeholder","onChange","onInputTextLayersChange","EventComponent","useMapEvents","moveend","onMoveEnd","GeoMap","MapContainer","zoom","zoomControl","TileLayer","ZoomControl","children","HomePage","locationStr","latStr","lngStr","zoomStr","parseLocationStr","match","params","selectedCenter","getAllEntIndex","mapCenter","getCenter","console","debug","newZoom","getZoom","newCenter","newUrl","window","history","pushState","callback","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","SelectedLayerClass","src","imgGeoLocate","alt","onClickGeoLocate","CustomLayerClass","iCustomLayerClass","App","basename","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5881b270.chunk.js","sourcesContent":["export default class Cache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItem = localStorage.getItem(cacheKey);\n    if (hotItem) {\n      return JSON.parse(hotItem);\n    }\n\n    const coldItem = await asyncFallback();\n    try {\n      localStorage.setItem(cacheKey, JSON.stringify(coldItem));\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItem;\n  }\n}\n","import Cache from \"./Cache.js\";\n\nconst CACHE_VERSION = \"v20210823\";\n\nconst JSON_HEADERS = {\n  headers: {\n    Accept: \"application/json\",\n  },\n};\n\nconst TSV_HEADERS = {\n  headers: {\n    Accept: \"text/csv\",\n  },\n};\n\nasync function jsonNonCache(url) {\n  const response = await fetch(url, JSON_HEADERS);\n  const dataJson = await response.json();\n  return dataJson;\n}\n\nexport default class WWW {\n  static pathJoin(pathFragmentList) {\n    return pathFragmentList.join(\"/\");\n  }\n\n  static async json(url) {\n    return Cache.get(`WWW.json.${CACHE_VERSION}.${url}`, async function () {\n      return jsonNonCache(url);\n    });\n  }\n\n  static async tsv(url) {\n    const response = await fetch(url, TSV_HEADERS);\n    const content = await response.text();\n    const lines = content.split(\"\\n\");\n    const keys = lines[0].split(\"\\t\").map((key) => key.replace(\"\\r\", \"\"));\n    const dataList = lines.slice(1, -1).map(function (line) {\n      const values = line.split(\"\\t\");\n      return keys.reduce(function (data, key, i) {\n        data[key] = values[i].replace(\"\\r\", \"\");\n        return data;\n      }, {});\n    });\n    return dataList;\n  }\n}\n","import WWW from \"./WWW.js\";\n\nexport const ENT = {\n  COUNTRY: \"country\",\n  PROVINCE: \"province\",\n  DISTRICT: \"district\",\n  DSD: \"dsd\",\n  GND: \"gnd\",\n};\n\nexport const REGION_TYPES = Object.values(ENT);\n\nexport const ENT_TO_NAME = {\n  [ENT.PROVINCE]: \"Province\",\n  [ENT.DISTRICT]: \"District\",\n  [ENT.DSD]: \"Divisional Secretariat Division\",\n  [ENT.GND]: \"Grama Niladhari Division\",\n};\n\nexport const PARENT_TO_CHILD = {\n  [ENT.COUNTRY]: ENT.PROVINCE,\n  [ENT.PROVINCE]: ENT.DISTRICT,\n  [ENT.DISTRICT]: ENT.DSD,\n  [ENT.DSD]: ENT.GND,\n  [ENT.GND]: undefined,\n};\n\nexport default class Ents {\n  static async getEntsByType(entType) {\n    const url = `data/ents/${entType}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(function (entIndex, ent) {\n      entIndex[ent.id] = ent;\n      return entIndex;\n    }, {});\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = REGION_TYPES;\n    const entIndexList = await Promise.all(\n      entTypes.map(async function (entType) {\n        return await Ents.getEntIndexByType(entType);\n      })\n    );\n\n    return entTypes.reduce(function (allEntIndex, entType, iEnt) {\n      allEntIndex[entType] = entIndexList[iEnt];\n      return allEntIndex;\n    }, {});\n  }\n\n  static async getEnt(entType, entID) {\n    const entIndex = await Ents.getEntIndexByType(entType);\n    let ent = entIndex[entID];\n    if (ent[\"centroid\"]) {\n      ent[\"centroid\"] = JSON.parse(ent[\"centroid\"]);\n    }\n    return ent;\n  }\n\n  static async getParentToChildMap() {\n    const url = `data/ents/parent_to_child_map.json`;\n    return await WWW.json(url);\n  }\n\n  static async getChildIDs(parentID) {\n    const parentToChildMap = await Ents.getParentToChildMap();\n    if (parentToChildMap[parentID]) {\n      return parentToChildMap[parentID];\n    }\n    return [];\n  }\n}\n","import WWW from \"./WWW.js\";\n\nimport { REGION_TYPES } from \"./Ents.js\";\n\nconst DEFAULT_LATLNG = [6.9157, 79.8636];\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      callback([position.coords.latitude, position.coords.longitude]);\n    });\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const [xj, yj] = polygon[j];\n\n    // eslint-disable-next-line no-mixed-operators\n    const a = yi > y !== yj > y;\n    // eslint-disable-next-line no-mixed-operators\n    const b = x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    const intersect = a && b;\n    if (intersect) {\n      nIntersects += 1;\n    }\n  }\n  return nIntersects % 2 === 1;\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getGeoForRegion(regionType, regionID) {\n    const url = `data/geo/${regionType}/${regionID}.json`;\n    return await WWW.json(url);\n  }\n\n  static async getRegionTree() {\n    const url = `data/geo/region_tree.json`;\n    return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionType, regionID) {\n    const multiPolygon = await GeoData.getGeoForRegion(regionType, regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point) {\n    let regionTree = await GeoData.getRegionTree();\n\n    let regionMap = {};\n\n    for (let iRegionType in REGION_TYPES) {\n      const regionType = REGION_TYPES[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(\n          point,\n          regionType,\n          regionID\n        );\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n        }\n      }\n      if (!isFoundRegion) {\n        break;\n      }\n    }\n    return regionMap;\n  }\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map((x) => Math.round(parseFloat(x) * Q) / Q);\n}\n","import { Component } from \"react\";\n\nimport \"./AbstractLayer.css\";\n\nexport default class AbstractLayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { dataList: undefined };\n  }\n\n  async getDataList() {\n    return [];\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    await this.getDataListAndUpdateState();\n  }\n\n  async getDataListAndUpdateState() {\n    const dataList = await this.getDataList();\n    if (this.isComponentMounted) {\n      this.setState({ dataList });\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  static getLabel() {\n    return \"AbstractLayer\";\n  }\n\n  static isMatch(text) {\n    return false;\n  }\n\n  renderDataList() {\n    return null;\n  }\n\n  render() {\n    const { dataList } = this.state;\n    if (!dataList) {\n      return null;\n    }\n    return this.renderDataList();\n  }\n}\n","import WWW from \"../../../base/WWW.js\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport AbstractLayer from \"../AbstractLayer.js\";\n\nconst DEFAULT_CIRLE_RADIUS = 1000;\n\nexport default class LKVaxCentersLayer extends AbstractLayer {\n  static getLabel() {\n    return \"COVID19 🦠 Vaccination Centers\";\n  }\n\n  static isMatch(text) {\n    return LKVaxCentersLayer.getLabel()\n      .toLowerCase()\n      .includes(text.toLowerCase());\n  }\n\n  async getDataList() {\n    const url = WWW.pathJoin([\n      \"https://raw.githubusercontent.com\",\n      \"nuuuwan/covid19/data\",\n      \"covid19.lk_vax_centers.latest.tsv\",\n    ]);\n    return await WWW.tsv(url);\n  }\n\n  renderDataList() {\n    const { dataList } = this.state;\n\n    return dataList.map(function (data, iData) {\n      if (!data.lat) {\n        return null;\n      }\n      const position = [parseFloat(data.lat), parseFloat(data.lng)];\n\n      let color = \"green\";\n      if (data.tags) {\n        color = \"red\";\n      }\n\n      let renderedDoseInfo = [];\n      if (data.dose1) {\n        renderedDoseInfo.push(\"💉 1st Dose\");\n      }\n      if (data.dose2) {\n        renderedDoseInfo.push(\"💉 2nd Dose\");\n      }\n\n      const onMouseOver = function (e) {\n        e.target.openPopup();\n      };\n\n      return (\n        <Circle\n          key={`layer-data-${iData}`}\n          center={position}\n          radius={DEFAULT_CIRLE_RADIUS}\n          pathOptions={{ color: color }}\n          eventHandlers={{ mouseover: onMouseOver }}\n        >\n          <Popup>\n            <h3>{data.center}</h3>\n            <address>{data.formatted_address}</address>\n            {renderedDoseInfo}\n            <hr />\n            <div>\n              <strong>{data.police}</strong> {\"Police Area, \"}{\" \"}\n              <strong>{data.district}</strong> District\n            </div>\n            <div>{data.tags}</div>\n            <div style={{ fontSize: \"70%\" }}>{data.fuzzy_key}</div>\n          </Popup>\n        </Circle>\n      );\n    });\n  }\n}\n","import { Component } from \"react\";\nimport GeoData from \"../../base/GeoData.js\";\nimport Ents, { ENT_TO_NAME, PARENT_TO_CHILD } from \"../../base/Ents.js\";\nimport { GeoJSON, Popup } from \"react-leaflet\";\n\nimport \"./RegionGeo.css\";\n\nconst STYLE_GEOJSON = {\n  color: \"white\",\n  fillColor: \"red\",\n  fillOpacity: 0.2,\n  weight: 2,\n};\n\nexport default class RegionGeo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { geoData: undefined, ent: undefined };\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    const { regionType, regionID } = this.props;\n    const geoData = await GeoData.getGeoForRegion(regionType, regionID);\n    const ent = await Ents.getEnt(regionType, regionID);\n\n    if (this.isComponentMounted) {\n      this.setState({ geoData, ent });\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  render() {\n    const { geoData, ent } = this.state;\n    if (!geoData) {\n      return \"...\";\n    }\n\n    const { regionType, regionID, onClick } = this.props;\n\n    const geoJsonData = {\n      type: \"MultiPolygon\",\n      coordinates: geoData,\n    };\n\n    let buttonShow = null;\n    const subRegionType = PARENT_TO_CHILD[regionType];\n    if (subRegionType) {\n      const subRegionTypeName = ENT_TO_NAME[subRegionType];\n      const onClickInner = function () {\n        onClick(regionType, regionID);\n      };\n      buttonShow = (\n        <div className=\"div-show\" onClick={onClickInner}>\n          Show\n          <strong>{` ${subRegionTypeName}s`}</strong>\n        </div>\n      );\n    }\n\n    return (\n      <GeoJSON\n        className=\"geojson\"\n        key={`geojson-${regionID}`}\n        data={geoJsonData}\n        style={STYLE_GEOJSON}\n      >\n        <Popup>\n          <h2>\n            <span className=\"div-region-name-geojson\">{ent.name}</span>\n          </h2>\n          <h2>\n            <span className=\"div-region-type-geojson\">\n              {ENT_TO_NAME[regionType]}\n            </span>\n          </h2>\n          {buttonShow}\n          <hr />\n          <table>\n            <tbody>\n              <tr>\n                <th>Population</th>\n                <td className=\"td-value\">\n                  {parseInt(ent.population).toLocaleString()}\n                </td>\n              </tr>\n              <tr>\n                <th>Area</th>\n                <td className=\"td-value\">\n                  {parseFloat(ent.area).toLocaleString()}\n                  {\" km²\"}\n                </td>\n              </tr>\n              <tr>\n                <th>Altitude (Centroid)</th>\n                <td className=\"td-value\">\n                  {parseFloat(ent.centroid_altitude).toLocaleString()}\n                  {\" m\"}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Popup>\n      </GeoJSON>\n    );\n  }\n}\n","import LKVaxCentersLayer from \"./LKVaxCentersLayer.js\";\nimport AdminRegionLayer from \"./AdminRegionLayer.js\";\n\nexport const CUSTOM_LAYERS = [LKVaxCentersLayer, AdminRegionLayer];\n\nexport const POPULAR_CUSTOM_LAYERS = CUSTOM_LAYERS;\n","import Ents, { ENT, PARENT_TO_CHILD } from \"../../../base/Ents.js\";\nimport AbstractLayer from \"../AbstractLayer.js\";\nimport RegionGeo from \"../RegionGeo.js\";\n\nexport default class AdminRegionLayer extends AbstractLayer {\n  constructor(props) {\n    super(props);\n    this.state = { rootRegionID: \"LK\", rootRegionType: ENT.COUNTRY };\n  }\n\n  static getLabel() {\n    return \"Administrative Regions\";\n  }\n\n  static isMatch(text) {\n    return AdminRegionLayer.getLabel()\n      .toLowerCase()\n      .includes(text.toLowerCase());\n  }\n\n  async getDataList() {\n    const { rootRegionID, rootRegionType } = this.state;\n    const childRegionType = PARENT_TO_CHILD[rootRegionType];\n    const childIDs = await Ents.getChildIDs(rootRegionID);\n    const dataList = childIDs.map((childID) => ({\n      regionType: childRegionType,\n      regionID: childID,\n    }));\n    return dataList;\n  }\n\n  onClick(regionType, regionID) {\n    this.setState(\n      {\n        rootRegionID: regionID,\n        rootRegionType: regionType,\n      },\n      async function () {\n        const dataList = await this.getDataList();\n        this.setState({ dataList });\n      }.bind(this)\n    );\n  }\n\n  renderDataList() {\n    const { dataList } = this.state;\n    return dataList.map(\n      function ({ regionType, regionID }) {\n        return (\n          <RegionGeo\n            key={`region-geo-${regionID}`}\n            regionType={regionType}\n            regionID={regionID}\n            onClick={this.onClick.bind(this)}\n          />\n        );\n      }.bind(this)\n    );\n  }\n}\n","import { Component } from \"react\";\nimport {\n  CUSTOM_LAYERS,\n  POPULAR_CUSTOM_LAYERS,\n} from \"./custom_layers/CustomLayers.js\";\n\nimport \"./LayerMenuView.css\";\n\nexport default class LayerMenuView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { matchingLayerClasses: [] };\n  }\n  onInputTextLayersChange(e) {\n    const searchText = e.target.value.toLowerCase();\n    if (searchText.length > 5) {\n      const matchingLayerClasses = CUSTOM_LAYERS.filter((LayerClass) =>\n        LayerClass.isMatch(searchText)\n      );\n      this.setState({ matchingLayerClasses });\n    }\n  }\n  render() {\n    const { matchingLayerClasses } = this.state;\n    const { onSelectLayer, selectedLayerClasses } = this.props;\n\n    const renderLayer = function (LayerClass) {\n      const label = LayerClass.getLabel();\n      const onClick = function (e) {\n        onSelectLayer(LayerClass);\n      };\n\n      let className = \"div-layer\";\n      if (selectedLayerClasses.includes(LayerClass)) {\n        className += \" div-layer-selected\";\n      }\n      return (\n        <div className={className} key={`li-${label}`} onClick={onClick}>\n          {label}\n        </div>\n      );\n    };\n\n    const title = selectedLayerClasses.map((LayerClass) =>\n      LayerClass.getLabel()\n    );\n\n    return (\n      <div className=\"div-layer-view\">\n        <h1>{title}</h1>\n        <input\n          className=\"input-text-layers\"\n          type=\"text\"\n          placeholder=\"Search Layers\"\n          onChange={this.onInputTextLayersChange.bind(this)}\n        />\n        {matchingLayerClasses.map(renderLayer)}\n        <div className=\"div-common-layer-header\">Commonly Used Layers</div>\n        {POPULAR_CUSTOM_LAYERS.map(renderLayer)}\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  ZoomControl,\n  useMapEvents,\n} from \"react-leaflet\";\n\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nfunction EventComponent(props) {\n  useMapEvents({\n    moveend: (e) => {\n      props.onMoveEnd(e);\n    },\n  });\n  return null;\n}\n\nexport default class GeoMap extends Component {\n  render() {\n    return (\n      <MapContainer\n        center={this.props.center}\n        zoom={this.props.zoom}\n        zoomControl={false}\n      >\n        <TileLayer url={URL_FORMAT} />\n        <EventComponent onMoveEnd={this.props.onMoveEnd} />\n        <ZoomControl zoom={this.props.zoom} position=\"bottomright\" />\n        {this.props.children}\n      </MapContainer>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/geolocate.f5052489.png\";","import { Component } from \"react\";\n\nimport { getBrowserLatLng, roundLatLng } from \"../../base/GeoData.js\";\nimport Ents from \"../../base/Ents.js\";\n\nimport { CUSTOM_LAYERS } from \"../molecules/custom_layers/CustomLayers.js\";\nimport LayerMenuView from \"../molecules/LayerMenuView.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport imgGeoLocate from \"../../assets/images/geolocate.png\";\n\nimport \"./HomePage.css\";\n\nconst DEFAULT_ZOOM = 15;\n\nfunction parseLocationStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(\",\");\n  const lat = parseFloat(latStr.replace(\"N\", \"\"));\n  const lng = parseFloat(lngStr.replace(\"E\", \"\"));\n  const zoom = parseInt(zoomStr.replace(\"z\", \"\"));\n  return { lat, lng, zoom };\n}\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    const locationStr = this.props.match.params.locationStr;\n    const { lat, lng, zoom } = parseLocationStr(locationStr);\n\n    this.state = {\n      selectedLayerClasses: [],\n      center: [lat, lng],\n      selectedCenter: [lat, lng],\n      zoom: zoom,\n      entIndex: {},\n      allEntIndex: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const allEntIndex = await Ents.getAllEntIndex();\n\n    this.setState({\n      allEntIndex,\n      selectedLayerClasses: [CUSTOM_LAYERS[0]],\n    });\n  }\n\n  async onMoveEnd(e) {\n    const mapCenter = e.target.getCenter();\n    console.debug(\"onMoveEnd\", mapCenter);\n\n    const newZoom = e.target.getZoom();\n    const newCenter = roundLatLng([mapCenter.lat, mapCenter.lng]);\n    const [lat, lng] = newCenter;\n\n    const newUrl = `/metaverse/${lat}N,${lng}E,${newZoom}z`;\n    window.history.pushState({}, null, newUrl);\n\n    this.setState({\n      zoom: newZoom,\n      center: newCenter,\n    });\n  }\n\n  onClickGeoLocate(e) {\n    getBrowserLatLng(\n      function (latLng) {\n        this.setState({\n          center: latLng,\n          selectedCenter: latLng,\n          zoom: DEFAULT_ZOOM,\n        });\n      }.bind(this)\n    );\n  }\n\n  onSelectLayer(SelectedLayerClass) {\n    this.setState({\n      selectedLayerClasses: [SelectedLayerClass],\n    });\n  }\n\n  render() {\n    const { selectedLayerClasses, center, selectedCenter, zoom, allEntIndex } =\n      this.state;\n\n    if (!allEntIndex) {\n      return \"...\";\n    }\n\n    return (\n      <>\n        <div className=\"div-title\">\n          <img\n            className=\"img-geolocate\"\n            src={imgGeoLocate}\n            alt=\"geolocate\"\n            onClick={this.onClickGeoLocate.bind(this)}\n          />\n        </div>\n        <LayerMenuView\n          onSelectLayer={this.onSelectLayer.bind(this)}\n          selectedLayerClasses={selectedLayerClasses}\n        />\n        <GeoMap\n          key={`geomap-${selectedCenter}`}\n          center={center}\n          zoom={zoom}\n          onMoveEnd={this.onMoveEnd.bind(this)}\n        >\n          {selectedLayerClasses.map(function (\n            CustomLayerClass,\n            iCustomLayerClass\n          ) {\n            return (\n              <CustomLayerClass\n                key={`custom-layer-class-${iCustomLayerClass}`}\n                center={center}\n              />\n            );\n          })}\n        </GeoMap>\n      </>\n    );\n  }\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename=\"/metaverse\">\n      <Switch>\n        <Route path=\"/:locationStr\" component={HomePage} />\n        <Route>\n          <Redirect to={`/6.9157N,79.8636E,15z`} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}