{"version":3,"sources":["base/Cache.js","base/WWW.js","core/custom_data/LKVaxCenters.js","base/GeoData.js","base/Ents.js","stateful/molecules/GeoMap.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Cache","cacheKey","asyncFallback","hotItem","localStorage","getItem","JSON","parse","coldItem","setItem","stringify","QuotaExceededError","clear","JSON_HEADERS","headers","TSV_HEADERS","jsonNonCache","url","a","fetch","response","json","dataJson","WWW","get","text","content","lines","split","keys","map","key","replace","dataList","slice","line","values","reduce","data","i","LKVaxCenters","tsv","isPointInPolygon","point","polygon","y","x","nIntersects","j","length","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","regionType","regionID","getGeoForRegion","onRegionsUpdate","getRegionTree","regionTree","regionTypes","regionMap","iRegionType","regionIDs","Object","isFoundRegion","iRegion","isPointInRegion","roundLatLng","latLng","Q","Math","round","parseFloat","Ents","entType","getEntsByType","ents","entIndex","ent","id","entTypes","Promise","all","getEntIndexByType","entIndexList","allEntIndex","iEnt","EventComponent","props","useMapEvents","moveend","e","onMoveEnd","GeoMap","MapContainer","center","this","zoom","zoomControl","TileLayer","children","className","ZoomControl","position","Component","STYLE_DIV_TITLE","zIndex","top","left","background","borderRadius","STYLE_DIV_RENDERED_REGIONS","display","STYLE_DIV_RENDERED_REGION","padding","STYLE_REGION_TYPE","fontSize","color","STYLE_REGION_NAME","renderLayer","layer","layerItem","lat","lng","tags","Circle","radius","pathOptions","Popup","center_si","center_ta","formatted_address","formatted_address_si","formatted_address_ta","police","district","HomePage","locationStr","latStr","lngStr","zoomStr","parseInt","parseLocationStr","match","params","state","customerLayers","regions","undefined","lkVaxCenters","getAllEntIndex","getRegionsForPoint","bind","setState","mapCenter","target","getCenter","newZoom","getZoom","newCenter","history","push","renderedLayers","renderedRegions","opacity","name","style","assign","toUpperCase","App","basename","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.715732a0.chunk.js","sourcesContent":["export default class Cache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItem = localStorage.getItem(cacheKey);\n    if (hotItem) {\n      return JSON.parse(hotItem);\n    }\n\n    // console.debug(`Cache: ${cacheKey}`);\n    const coldItem = await asyncFallback();\n    try {\n      localStorage.setItem(cacheKey, JSON.stringify(coldItem));\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItem;\n  }\n}\n","import Cache from './Cache.js';\n\nconst JSON_HEADERS = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n};\n\nconst TSV_HEADERS = {\n  headers: {\n    // 'Content-Type': 'text/csv',\n    'Accept': 'text/csv',\n  },\n};\n\nasync function jsonNonCache(url) {\n\n  const response = await fetch(url, JSON_HEADERS);\n  const dataJson = await response.json();\n  return dataJson;\n}\n\nexport default class WWW {\n  static async json(url) {\n    return Cache.get(\n      `WWW.json.v3.${url}`,\n      async function() {\n        return jsonNonCache(url);\n      },\n    );\n  }\n\n  static async tsv(url) {\n    const response = await fetch(url, TSV_HEADERS);\n    const content = await response.text();\n    const lines = content.split('\\n');\n    const keys = lines[0].split('\\t').map(key => key.replace('\\r', ''));\n    const dataList = lines.slice(1, -1).map(\n      function(line) {\n        const values = line.split('\\t');\n        return keys.reduce(\n          function(data, key, i) {\n            data[key] = values[i];\n            return data;\n          },\n          {},\n        )\n      }\n    );\n    return dataList;\n  }\n}\n","import WWW from '../../base/WWW.js';\n\nconst REMOTE_URL = 'https://raw.githubusercontent.com'\n  + '/nuuuwan/covid19/data'\n  + '/covid19.lk_vax_centers.latest.tsv';\n\nexport default class LKVaxCenters {\n  static async get() {\n    return await WWW.tsv(REMOTE_URL);\n  }\n}\n","import WWW from './WWW.js';\n\nconst DEFAULT_LATLNG = [6.9157, 79.8636];\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      function(position) {\n        callback([\n          position.coords.latitude,\n          position.coords.longitude\n        ]);\n      }\n    );\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const  [xj, yj] = polygon[j];\n\n    const intersect = ((yi > y) !== (yj > y))\n        && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) {\n      nIntersects += 1;\n    }\n\n  }\n  return ((nIntersects % 2) === 1);\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getGeoForRegion(regionType, regionID) {\n      const url = `data/geo/`\n        + `${regionType}/${regionID}.json`\n      return await WWW.json(url);\n  }\n\n  static async getRegionTree() {\n      const url = `data/geo/`\n        + `region_tree.json`\n      return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionType, regionID) {\n    const multiPolygon = await GeoData.getGeoForRegion(regionType, regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point, onRegionsUpdate) {\n    let regionTree = await GeoData.getRegionTree();\n    const regionTypes = ['province', 'district', 'dsd', 'gnd'];\n\n    let regionMap = {};\n\n    for (let iRegionType in regionTypes) {\n      const regionType = regionTypes[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(\n            point,\n            regionType,\n            regionID,\n        );\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n          onRegionsUpdate(\n              point,\n              regionMap,\n          );\n          break;\n        }\n      }\n      if (!isFoundRegion) {\n        break\n      }\n    }\n    onRegionsUpdate(\n        point,\n        regionMap,\n    );\n  }\n\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map(x => Math.round(parseFloat(x) * Q) / Q);\n}\n","import WWW from './WWW.js';\n\nexport default class Ents {\n  static async getEntsByType(entType) {\n      const url = `data/ents/`\n        + `${entType}.tsv`\n      return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(\n      function(entIndex, ent) {\n        entIndex[ent.id] = ent;\n        return entIndex;\n      },\n      {},\n    );\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = [\n        'province',\n        'district',\n        'dsd',\n        'gnd',\n    ];\n    const entIndexList = await Promise.all(entTypes.map(\n      async function(entType) {\n        return await Ents.getEntIndexByType(entType)\n      }\n    ));\n\n    return entTypes.reduce(\n      function(allEntIndex, entType, iEnt) {\n        allEntIndex[entType] = entIndexList[iEnt];\n        return allEntIndex;\n      },\n      {},\n    );\n  }\n\n}\n","import {Component} from 'react';\nimport {\n    MapContainer,\n    TileLayer,\n    ZoomControl,\n    useMapEvents,\n} from 'react-leaflet';\n\nimport './GeoMap.css';\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\nfunction EventComponent(props) {\n  useMapEvents({\n    moveend: (e) => {\n      props.onMoveEnd(e);\n    },\n  });\n  return null;\n}\n\nexport default class GeoMap extends Component {\n  render() {\n    return (\n      <MapContainer\n        center={this.props.center}\n        zoom={this.props.zoom}\n        zoomControl={false}\n      >\n        <TileLayer url={URL_FORMAT}/>\n        <EventComponent onMoveEnd={this.props.onMoveEnd}/>\n        {this.props.children}\n        <div className=\"div-center-marker\" />\n        <ZoomControl zoom={this.props.zoom} position=\"bottomright\" />\n      </MapContainer>\n    );\n  }\n}\n","import {Component} from 'react';\nimport {Circle, Popup} from 'react-leaflet';\n\nimport LKVaxCenters from '../../core/custom_data/LKVaxCenters.js';\nimport GeoData, {roundLatLng} from '../../base/GeoData.js';\nimport Ents from '../../base/Ents.js';\n\nimport GeoMap from '../molecules/GeoMap.js';\n\nconst DEFAULT_CIRLE_RADIUS = 500;\n\nconst STYLE_DIV_TITLE = {\n  zIndex: 10000,\n  position: 'absolute',\n  top: 24,\n  left: 60,\n  background: 'white',\n  borderRadius: 6,\n}\n\nconst STYLE_DIV_RENDERED_REGIONS = {\n  display: 'table-row',\n}\n\nlet STYLE_DIV_RENDERED_REGION = {\n  display: 'table-cell',\n  padding: 6,\n}\n\nconst STYLE_REGION_TYPE = {\n  fontSize: '40%',\n  color: 'black',\n}\n\nconst STYLE_REGION_NAME = {\n  fontSize: '80%',\n  color: 'black',\n}\n\nfunction renderLayer(layer) {\n  return layer.map(\n    function(layerItem) {\n      if (!layerItem.lat) {\n        return null;\n      }\n      const position = [\n          parseFloat(layerItem.lat),\n          parseFloat(layerItem.lng),\n      ];\n\n      let color = \"green\";\n      if (layerItem.tags) {\n        color = \"red\"\n      }\n      return (\n        <Circle\n          center={position}\n          radius={DEFAULT_CIRLE_RADIUS}\n          pathOptions={{color: color}}\n        >\n          <Popup>\n            <h3>{layerItem.center}</h3>\n            <h3>{layerItem.center_si}</h3>\n            <h3>{layerItem.center_ta}</h3>\n\n            <ul>\n              <li>{layerItem.formatted_address}</li>\n              <li>{layerItem.formatted_address_si}</li>\n              <li>{layerItem.formatted_address_ta}</li>\n            </ul>\n\n            <hr/>\n            <div>\n              {layerItem.police} Police Area,\n              {layerItem.district} District\n            </div>\n            <div>{layerItem.tags}</div>\n          </Popup>\n        </Circle>\n      );\n    }\n  )\n}\n\nfunction parseLocationStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(',');\n  const lat = parseFloat(latStr.replace('N', ''));\n  const lng = parseFloat(lngStr.replace('E', ''));\n  const zoom = parseInt(zoomStr.replace('z', ''));\n  return {lat, lng, zoom};\n}\n\nexport default class HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    const locationStr = this.props.match.params.locationStr;\n    const {lat, lng, zoom} = parseLocationStr(locationStr);\n\n    this.state = {\n      customerLayers: [],\n      center: [lat, lng],\n      zoom: zoom,\n      regions: undefined,\n      entIndex: {},\n      allEntIndex: undefined,\n      lkVaxCenters: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const allEntIndex = await Ents.getAllEntIndex();\n    const lkVaxCenters = await LKVaxCenters.get();\n\n    await GeoData.getRegionsForPoint(\n      this.state.center,\n      this.onRegionsUpdate.bind(this),\n    );\n\n    this.setState({\n      allEntIndex,\n      customerLayers: [lkVaxCenters],\n    });\n  }\n\n  async onRegionsUpdate(center, regions) {\n    this.setState({\n      center,\n      regions,\n    });\n  }\n\n  async onMoveEnd(e) {\n    const mapCenter = e.target.getCenter();\n    const newZoom = e.target.getZoom();\n    const newCenter = roundLatLng([mapCenter.lat, mapCenter.lng]);\n    const [lat, lng] = newCenter;\n    this.props.history.push(`/${lat}N,${lng}E,${newZoom}z`)\n\n    this.setState({\n      zoom: newZoom,\n    });\n\n    await GeoData.getRegionsForPoint(\n      newCenter,\n      this.onRegionsUpdate.bind(this),\n    );\n  };\n\n  render() {\n    const {customerLayers, center, zoom, regions, allEntIndex} = this.state;\n    if (!allEntIndex) {\n      return '...';\n    }\n    let renderedLayers = customerLayers.map(renderLayer)\n\n    let renderedRegions = '...';\n    if (regions) {\n      const entTypes = ['province', 'district', 'dsd', 'gnd'];\n      const OPACITY_INCR = 0.8\n      let opacity = 1.0;\n\n      renderedRegions = entTypes.map(\n        function(entType) {\n          const regionID = regions[entType];\n          if (regionID) {\n            const name = allEntIndex[entType][regionID].name;\n            let style = Object.assign({}, STYLE_DIV_RENDERED_REGION, {opacity});\n            opacity *= OPACITY_INCR;\n            return (\n              <div key={`region-${regionID}` } style={style}>\n                <div style={STYLE_REGION_NAME}>{name}</div>\n                <div style={STYLE_REGION_TYPE}>{entType.toUpperCase()}</div>\n              </div>\n            )\n          }\n          return '...';\n        }\n      );\n    }\n\n    return (\n      <>\n        <div style={STYLE_DIV_TITLE}>\n          <div style={STYLE_DIV_RENDERED_REGIONS}>\n            {renderedRegions}\n          </div>\n        </div>\n        <GeoMap\n          center={center}\n          zoom={zoom}\n          onMoveEnd={this.onMoveEnd.bind(this)}\n        >\n          {renderedLayers}\n        </GeoMap>\n      </>\n    );\n  }\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport HomePage from './stateful/pages/HomePage.js';\n\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n      <Router basename=\"/\">\n        <Switch>\n          <Route path=\"/:locationStr\" component={HomePage}/>\n          <Route>\n             <Redirect to={`/6.9157N,79.8636E,15z`} />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}